server {
        server_name {{ domain_bw }};

        listen [::]:443 ssl http2;
        listen 443 ssl http2;

        #SSL
        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_dhparam /etc/nginx/dhparam-2048.pem;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        #resolver 127.0.0.1 [::1] valid=300s;
        resolver_timeout 5s;

        # HSTS, only this domain!.
        # add_header Strict-Transport-Security "max-age=31536000" always;

        #Other Headers
        add_header Content-Security-Policy "default-src 'self';";
        add_header X-Frame-Options "SAMEORIGIN";

        #LetsEncrypt (Certbot)
        ssl_certificate /etc/letsencrypt/live/{{ domain_bw }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain_bw }}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_bw }}/chain.pem;

        client_max_body_size 128M;

        location / {
            proxy_pass http://127.0.0.1:6666;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /notifications/hub {
            proxy_pass http://127.0.0.1:3012;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /notifications/hub/negotiate {
            proxy_pass http://127.0.0.1:6666;
        }
}
server {
        if ($host = {{ domain_bw }}) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        listen 80;
        listen [::]:80;
        server_name "{{ domain_bw }}";
        return 404;
}
